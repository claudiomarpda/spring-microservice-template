plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.micro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//    mapstruct
//}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.2")
    mapstructVersion = "1.4.2.Final"
    lombokVersion = "1.18.20"
    lombokMapstructBindingVersion = "0.2.0"
}

//compileJava {
//    options.annotationProcessorPath = configurations.annotationProcessor
//
//    // if you need to configure mapstruct component model
//    options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
//}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-parent:1.0.2.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
